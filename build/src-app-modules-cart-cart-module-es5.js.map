{"version":3,"sources":["webpack:///src/app/modules/cart/cart.component.ts","webpack:///src/app/modules/cart/cart.component.html","webpack:///src/app/modules/cart/cart.module.ts"],"names":["CartComponent","cartService","cartItems","maxQuantiy","getCartItems","product","removeFromCart","quantity","total","price","saveCart","CartUpdateSubject","subscribe","cart","items","selector","templateUrl","styleUrls","routes","path","component","CartModule","forChild","declarations","imports","exports"],"mappings":"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","file":"src-app-modules-cart-cart-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Product } from 'src/app/core/models/product.model';\n\nimport { CartService } from 'src/app/core/services/cart.service';\n\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n\n  constructor(\n    private cartService: CartService\n  ) { }\n\n  cartItems = [];\n  maxQuantiy = 10;\n\n\n  getCartItems() {\n    this.cartItems = this.cartService.getCartItems();\n  }\n\n\n  removeFromCart(product: Product) {\n    this.cartService.removeFromCart(product);\n  }\n\n\n  decrementQuantity(product: Product) {\n    if (product.quantity >= 0) {\n      product.quantity = product.quantity - 1;\n      product.total = product.total - product.price;\n    }\n\n    /** If Quantity is zero then remove from cart */\n    if (product.quantity === 0) {\n      this.cartService.removeFromCart(product);\n      return;\n    }\n\n    this.cartService.saveCart(product);\n  }\n\n\n\n  incrementQuantity(product: Product) {\n\n    if (product.quantity < this.maxQuantiy) {\n      product.quantity = product.quantity + 1;\n      product.total = product.total + product.price;\n    }\n\n    this.cartService.saveCart(product);\n  }\n\n\n  ngOnInit(): void {\n\n    this.getCartItems();\n\n    /** Get Cart Cart From Subscription when it's updated */\n    this.cartService.CartUpdateSubject.subscribe((cart) => {\n      this.cartItems = cart.items;\n    });\n  }\n\n}\n","<div class=\"main-container\">\n\n    <div class=\"primary-heading\">\n        <h1 class=\"primary-heading-text\">CART</h1>\n    </div>\n\n    <div class=\"cart-container\">\n        <table class=\"table\" *ngIf=\"cartItems else emptyCart\">\n            <thead>\n                <tr>\n                    <th scope=\"col\"></th>\n                    <th scope=\"col\">Product</th>\n                    <th scope=\"col\">Price</th>\n                    <th scope=\"col\">Quantity</th>\n                    <th scope=\"col\">Total</th>\n                    <th scope=\"col\">Remove</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let product of cartItems\" class=\"product\">\n                    <td><img class=\"product-img\" src=\"{{product.image}}\" alt=\"{{ product.product_name }} image\"></td>\n                    <td class=\"product-name\">{{ product.product_name }}</td>\n                    <td><i class=\"fa fa-inr\"></i> {{ product.price }}</td>\n                    <td class=\"product-quantity\">\n                        <button class=\"btn\" type=\"button\" (click)=\"decrementQuantity(product)\">-</button>\n                        <span>{{product.quantity}}</span>\n                        <button class=\"btn\" type=\"button\" (click)=\"incrementQuantity(product)\">+</button>\n                    </td>\n                    <td><i class=\"fa fa-inr\"></i> {{ product.total }}</td>\n                    <td>\n                        <button class=\"btn\" type=\"button\" (click)=\"removeFromCart(product)\">\n                            <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<ng-template #emptyCart>\n    <div class=\"text-center cart-empty\">\n        <h2 class=\"text-muted\">Your Cart is empty</h2>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CartComponent } from './cart.component';\n\nconst routes: Routes = [\n  { path: '', component: CartComponent }\n];\n\n@NgModule({\n  declarations: [\n    CartComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CartModule { }\n"]}