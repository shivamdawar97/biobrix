{"version":3,"sources":["webpack:///src/app/modules/cart/cart.module.ts","webpack:///src/app/modules/cart/order-list/order-list.component.ts","webpack:///src/app/modules/cart/order-list/order-list.component.html","webpack:///src/app/core/http/razorpay-payment.service.ts","webpack:///src/app/modules/cart/cart.component.ts","webpack:///src/app/modules/cart/cart.component.html","webpack:///src/app/window-ref.service.ts","webpack:///src/app/modules/cart/checkout/checkout.component.ts","webpack:///src/app/modules/cart/checkout/checkout.component.html"],"names":["routes","path","component","CartModule","forChild","declarations","imports","exports","OrderListComponent","selector","templateUrl","styleUrls","RazorpayPaymentService","http","httpErrorHandlerService","BASE_URL","INITIATE_PAYMENT","VERIFY_PAYMENT","orderId","data","url","post","headers","pipe","handleErr","providedIn","CartComponent","cartService","cartApiService","router","utilityService","cartItems","maxQuantiy","getCartItems","product","removeFromCart","quantity","total","price","saveCart","clearCart","showLoader","next","createOrder","subscribe","res","_id","navigate","queryParams","order_id","err","CartUpdateSubject","cart","items","_window","window","WindowRefService","CheckoutComponent","route","razorpayPaymentService","windowRef","isLoading","isOtpSent","isPhoneVerified","otpField","products","subtotal","isOrderPlaced","isVerficationFailed","orderNotFound","snapshot","queryParamMap","get","console","log","scrollTo","orderDetails","order","payment_status","initiateForm","form","disable","phone_number","minLength","maxLength","required","user_name","email","address","zip_code","city","state","getOtp","value","status","verifyOtp","error","valid","initiatePayment","getRawValue","payWithRazor","options","key","amount","currency","name","description","image","payment_id","modal","escape","prefill","contact","theme","color","handler","response","verifyPayment","ondismiss","rzp","nativeWindow","Razorpay","open"],"mappings":"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","file":"src-app-modules-cart-cart-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CartComponent } from './cart.component';\nimport {CheckoutComponent} from './checkout/checkout.component';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nimport { OrderListComponent } from './order-list/order-list.component';\nimport {SharedModule} from '../../shared/shared.module';\n\nconst routes: Routes = [\n  { path: '', component: CartComponent },\n  {\n    path: 'checkout', component: CheckoutComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    CartComponent,\n    CheckoutComponent,\n    OrderListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CartModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.scss']\n})\nexport class OrderListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>order-list works!</p>\n","import { Injectable } from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorHandlerService } from './http-error-handler.service';\nimport { catchError } from 'rxjs/operators';\nimport { OrderDetail } from './cart-api.service';\nimport { UserInfo } from '../models/user-info';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RazorpayPaymentService {\n  private BASE_URL = environment.BASE_URL;\n  private INITIATE_PAYMENT =  'payment/initiate_payment/'\n  private VERIFY_PAYMENT =  'payment/validate_signature/'\n\n  constructor(private http: HttpClient, private httpErrorHandlerService: HttpErrorHandlerService) {}\n\n  initiatePayment(orderId: string, data: UserInfo): Observable<OrderDetail> {\n    const url = `${this.BASE_URL}${this.INITIATE_PAYMENT}${orderId}`;\n    return this.http.post<OrderDetail>(url, data, {\n      headers: {\n        'Access-Control-Allow-Methods': '*'\n      }\n    }).pipe(catchError(this.httpErrorHandlerService.handleErr));\n  }\n\n  verifyPayment(data: any) {\n    const url = `${this.BASE_URL}${this.VERIFY_PAYMENT}`;\n    return this.http.post<OrderDetail>(url, data, {\n      headers: {'Access-Control-Allow-Methods': '*'}\n    }).pipe(catchError(this.httpErrorHandlerService.handleErr));\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Product } from 'src/app/core/models/product.model';\n\nimport { CartService } from 'src/app/core/services/cart.service';\nimport {CartApiService} from '../../core/http/cart-api.service';\nimport {Router} from '@angular/router';\nimport {UtilityService} from '../../core/services/utility.service';\n\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n\n  cartItems = [];\n  maxQuantiy = 10;\n\n  constructor(\n    private cartService: CartService,\n    private cartApiService: CartApiService,\n    private router: Router,\n    private utilityService: UtilityService\n  ) { }\n\n  getCartItems() {\n    this.cartItems = this.cartService.getCartItems();\n  }\n\n\n  removeFromCart(product: Product) {\n    this.cartService.removeFromCart(product);\n  }\n\n\n  decrementQuantity(product: Product) {\n    if (product.quantity >= 0) {\n      product.quantity = product.quantity - 1;\n      product.total = product.total - product.price;\n    }\n\n    /** If Quantity is zero then remove from cart */\n    if (product.quantity === 0) {\n      this.cartService.removeFromCart(product);\n      return;\n    }\n\n    this.cartService.saveCart(product);\n  }\n\n\n\n  incrementQuantity(product: Product) {\n\n    if (product.quantity < this.maxQuantiy) {\n      product.quantity = product.quantity + 1;\n      product.total = product.total + product.price;\n    }\n\n    this.cartService.saveCart(product);\n  }\n\n  clearCart(){\n\n    this.cartService.clearCart()\n\n  }\n\n  checkout() {\n    this.utilityService.showLoader.next(true);\n    this.cartApiService.createOrder(this.cartItems).subscribe(res => {\n      this.utilityService.showLoader.next(false);\n      if (!res) {\n        return;\n      }\n      const orderId = res._id;\n      this.router.navigate(['view-cart/checkout'], {queryParams: {order_id: orderId}});\n    }, err => this.utilityService.showLoader.next(false));\n  }\n\n\n  ngOnInit(): void {\n\n    this.getCartItems();\n\n    /** Get Cart Cart From Subscription when it's updated */\n    this.cartService.CartUpdateSubject.subscribe((cart) => {\n      this.cartItems = cart.items;\n    });\n  }\n\n}\n","<app-main-container title=\"CART\">\n  <div class=\"cart-container\">\n    <button *ngIf=\"cartItems.length > 0\" (click)=\"clearCart()\" class=\"del-btn btn btn-outline-danger\">Clear Cart</button>\n    <div class=\"table-responsive\">\n      <table class=\"table\" *ngIf=\"cartItems.length > 0 else emptyCart\">\n        <thead>\n        <tr>\n          <th scope=\"col\"></th>\n          <th scope=\"col\">Product</th>\n          <th scope=\"col\">Price</th>\n          <th scope=\"col\">Quantity</th>\n          <th scope=\"col\">Total</th>\n          <th scope=\"col\">Remove</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let product of cartItems\" class=\"product\">\n          <td><img class=\"product-img\" src=\"{{product.image}}\" alt=\"{{ product.product_name }} image\"></td>\n          <td class=\"product-name\">{{ product.product_name }}</td>\n          <td><i class=\"fa fa-inr\"></i> {{ product.price }}</td>\n          <td class=\"product-quantity_container\">\n            <div class=\"product-quantity\">\n              <button class=\"btn\" type=\"button\" (click)=\"decrementQuantity(product)\">-</button>\n              <span>{{product.quantity}}</span>\n              <button class=\"btn\" type=\"button\" (click)=\"incrementQuantity(product)\">+</button>\n            </div>\n          </td>\n          <td><i class=\"fa fa-inr\"></i> {{ product.total }}</td>\n          <td>\n            <button class=\"btn\" type=\"button\" (click)=\"removeFromCart(product)\">\n              <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </button>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n\n    <div class=\"cart-buttons\">\n      <a routerLink=\"/products/all\" class=\"btn primary-button\">\n        Continue Shopping\n      </a>\n      <button *ngIf=\"cartItems.length > 0\" type=\"button\" class=\"btn primary-button checkout\" (click)=\"checkout()\">\n        Checkout\n      </button>\n    </div>\n  </div>\n\n  <ng-template #emptyCart>\n    <div class=\"text-center cart-empty\">\n      <h2 class=\"text-muted\">Your Cart is empty</h2>\n    </div>\n  </ng-template>\n</app-main-container>\n","import { Injectable } from '@angular/core';\n\nfunction _window() {\n  return window;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowRefService {\n\n  constructor() { }\n\n  get nativeWindow(): any {\n    return _window();\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {CartApiService, OrderDetail} from '../../../core/http/cart-api.service';\nimport {CartService} from '../../../core/services/cart.service';\nimport {Product} from '../../../core/models/product.model';\nimport { WindowRefService } from 'src/app/window-ref.service';\nimport { RazorpayPaymentService } from 'src/app/core/http/razorpay-payment.service';\nimport { UserInfo } from 'src/app/core/models/user-info';\n\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\n\n  orderId: string;\n  isLoading = false;\n  form: FormGroup;\n  isOtpSent = false;\n  isPhoneVerified = false;\n  otpField = new FormControl();\n  products: Product[] = [];\n  total = 0;\n  subtotal = 0;\n  isOrderPlaced = false;\n  isVerficationFailed = false;\n  orderNotFound = false;\n\n  constructor(private route: ActivatedRoute,\n              private cartApiService: CartApiService,\n              private razorpayPaymentService: RazorpayPaymentService,\n              private cart: CartService,\n              private router: Router,\n              private windowRef: WindowRefService\n              ) {\n\n    this.orderId = this.route.snapshot.queryParamMap.get('order_id');\n\n    if (!this.orderId) {\n      console.log('No order id present');\n      this.router.navigate(['/view-cart']);\n    }\n  }\n\n  ngOnInit() {\n      scrollTo(0,0);\n      this.isLoading = true;\n      this.cartApiService.orderDetails(this.orderId).subscribe(order => {\n      this.isLoading = false;\n      this.products = order.products;\n      this.total = order.total;\n      this.subtotal = this.total;\n      this.isOrderPlaced = order.payment_status\n      this.initiateForm(this.isOrderPlaced?order:null)\n      if(this.isOrderPlaced) {\n        this.isPhoneVerified = true;\n        this.form.disable()\n      }\n    },err => {\n      this.isLoading = false;\n      this.orderNotFound = true;\n    })\n  }\n\n  private initiateForm(orderDetails : OrderDetail){\n    this.form = new FormGroup({\n      phone_number: new FormControl(\n         orderDetails?.phone_number, [\n          Validators.minLength(10),\n          Validators.maxLength(10),\n          Validators.required,\n        ]),\n      user_name: new FormControl(orderDetails?.user_name,Validators.required),\n      email: new FormControl(orderDetails?.email,[Validators.required,Validators.email]),\n      address: new FormControl(orderDetails?.address,Validators.required),\n      zip_code: new FormControl(orderDetails?.zip_code,Validators.required),\n      city: new FormControl(orderDetails?.city,Validators.required),\n      state: new FormControl(orderDetails?.state,Validators.required)\n    });\n  }\n\n  getOtp() {\n    this.isLoading = true;\n    this.cartApiService.getOtp(this.form.get('phone_number').value).subscribe(res => {\n      this.isLoading = false;\n      if (res.status === 'pending') {\n        this.isOtpSent = true;\n        this.form.get('phone_number').disable();\n      }\n    });\n  }\n\n  verifyOtp() {\n    try {\n      this.cartApiService.verifyOtp(this.form.get('phone_number').value, this.otpField.value).subscribe(res => {\n        if (res.status === 'verified')  {\n          this.isVerficationFailed = false;\n          this.isPhoneVerified = true;\n        }\n      });\n    } catch(error){\n      this.isVerficationFailed = true;\n    }\n  }\n\n  // makePayment() {\n  //   // use payment api for payment -> open order detail page\n\n  //   console.log('from value is ', this.form.value);\n  //   this.router.navigate(['/', 'payment'], { queryParams: {\n  //     order_id: this.orderId,\n  //       email: this.form.get('email').value,\n  //       phone: this.form.get('phone_number').value,\n  //       amount: this.total\n  //     }});\n  //   // this.updateOrder();\n  // }\n  makePayment() {\n    if(this.form.valid) {\n\n      this.razorpayPaymentService.initiatePayment(this.orderId, this.form.getRawValue()).subscribe(order => {\n        this.payWithRazor(order)\n      });\n    }\n  }\n\n  private payWithRazor(order: OrderDetail) {\n\n    const options: any = {\n      key: 'rzp_test_htUikbcBMPbM6C',\n      amount: order.total, // amount should be in paise format to display Rs 1255 without decimal point\n      currency: 'INR',\n      name: 'Biobrix', // company name or product name\n      description: 'Healthcarre',  // product description\n      image: '../../../../assets/BIOBRIX_LOGO.svg', // company logo or product image\n      order_id: order.payment_id, // order_id created by you in backend\n      modal: {\n        // We should prevent closing of the form when esc key is pressed.\n        escape: false,\n      },\n      prefill : {\n        name: order.user_name,\n        email: order.email,\n        contact: order.phone_number\n      },\n      // notes: {\n      //   // include notes if any\n      // },\n      theme: {\n        color: '#0c238a'\n      }\n    };\n    options.handler = ((response, error) => {\n      // call backend api to verify payment signature & capture transaction\n      this.verifyPayment(response)\n\n    });\n    options.modal.ondismiss = (() => {\n      // handle the case when user closes the form while transaction is in progress\n      console.log('Transaction cancelled.');\n    });\n\n    const rzp = new this.windowRef.nativeWindow.Razorpay(options);\n    rzp.open();\n  }\n\n  verifyPayment(response: any) {\n    this.razorpayPaymentService.verifyPayment({\n      ...response,\n      order_id: this.orderId\n    }).subscribe(data => {\n        console.log(data)\n        this.isOrderPlaced = true;\n    })\n  }\n\n  // razorpay_order_id: \"order_FCUg1zC0k6rlVv\"\n  // razorpay_payment_id: \"pay_FCUgrUdI4x8T39\"\n  // razorpay_signature: \"0ef2193fb5ade55760525fb94d548cb752cca1d02bc1f49da6b53f32a5a18a26\"\n}\n","<app-main-container title=\"CHECKOUT\">\n\n  <div *ngIf=\"isOrderPlaced\" class=\"media payment-success\">\n\n    <i class=\"align-self-center mr-3 far fa-check-circle payment-success__done\"></i>\n      <div class=\"payment-success__body\">\n        <strong> Your has been successfully placed! &nbsp; &nbsp;</strong>  <a href=\"#\" class=\"alert-link\">Click here </a> to track your order.\n     </div>\n\n  </div>\n\n  <div class=\"not_found\" *ngIf=\"orderNotFound\">\n    <h1> <strong> Order not found!</strong></h1>\n</div>\n\n  <div *ngIf=\"!isLoading else loading_circular\" class=\"checkout-container\">\n\n    <div class=\"order-information\">\n      <div class=\"order-information__header\">Your Order</div>\n      <div class=\"order-information__content\">\n        <div class=\"order-item\" *ngFor=\"let product of products\">\n          <img src=\"{{product.image}}\" style=\"object-fit: contain\" height=\"80\" width=\"80\">\n          <div class=\"name-and-price\">\n            <span class=\"name\">{{product.product_name}}</span>\n            <span class=\"price\">{{product.price}}</span>\n          </div>\n          <div class=\"flex-fill\"></div>\n          <span class=\"quantity\">{{product.quantity}}</span>\n          <span class=\"total\">{{product.total}}</span>\n        </div>\n        <div class=\"sub-total-item\">\n          <div class=\"flex-fill\"></div>\n          <span class=\"total-heading\">Sub total</span>\n          <span class=\"total-count\">{{subtotal}}</span>\n        </div>\n\n        <div class=\"total-item\">\n          <div class=\"flex-fill\"></div>\n          <span class=\"total-heading\">Total</span>\n          <span class=\"total-count\">{{total}}</span>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"!orderNotFound \" class=\"billing-information\">\n\n      <div class=\"billing-information__header\">Billing information</div>\n      <form [formGroup]=\"form\" class=\"billing-information__container\" (ngSubmit)=\"form.valid && makePayment()\">\n        <div class=\"verify-phone\">\n          <div *ngIf=\"!isPhoneVerified\" class=\"alert alert-primary\">Please verify your mobile number</div>\n          <div class=\"form-group\">\n            <label for=\"phone_number\">Mobile number</label>\n            <input type=\"text\" maxlength=\"10\" formControlName=\"phone_number\" id=\"phone_number\" class=\"form-control form-control-lg\" aria-describedby=\"phoneHelp\" placeholder=\"Enter mobile number\">\n          </div>\n          <div *ngIf=\"isOtpSent && !isPhoneVerified\" class=\"alert alert-success mt-3\">OTP has been sent to this mobile number, please verify!</div>\n          <div *ngIf=\"isPhoneVerified\" class=\"alert alert-success mt-3\">Mobile number verified!</div>\n          <div *ngIf=\"isVerficationFailed\" class=\"alert alert-danger mt-3\">Mobile number verification failed!</div>\n          <div class=\"form-group\" *ngIf=\"isOtpSent && !isPhoneVerified\">\n            <label for=\"optField\">Enter OTP</label>\n            <input type=\"text\" [formControl]=\"otpField\" id=\"optField\" class=\"form-control form-control-lg\" aria-describedby=\"phoneHelp\" placeholder=\"Enter OTP code\">\n          </div>\n          <button *ngIf=\"!isOtpSent && !isPhoneVerified\" type=\"button\" class=\"btn primary-button d-block\" [disabled]=\"!form.get('phone_number').valid\" (click)=\"getOtp()\">Get OTP</button>\n          <button *ngIf=\"isOtpSent && !isPhoneVerified\" type=\"button\" class=\"btn primary-button d-block\" [disabled]=\"!otpField.value\" (click)=\"verifyOtp()\">Verify</button>\n        </div>\n        <div class=\"details-form\" *ngIf=\"isPhoneVerified\">\n          <div class=\"form-group input\">\n            <label for=\"email\">Email</label>\n            <input type=\"email\" formControlName=\"email\" id=\"email\" class=\"form-control form-control-lg\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n          </div>\n          <div class=\"form-group input\">\n            <label for=\"user_name\">Full Name</label>\n            <input type=\"text\" formControlName=\"user_name\" id=\"user_name\" class=\"form-control form-control-lg\" aria-describedby=\"nameHelp\" placeholder=\"Enter name\">\n          </div>\n          <div class=\"form-group textarea\">\n            <label for=\"address\">Billing address</label>\n            <textarea type=\"text\" formControlName=\"address\" id=\"address\" class=\"form-control form-control-lg w-100\" aria-describedby=\"addressHelp\" placeholder=\"Enter address\"></textarea>\n          </div>\n          <div class=\"form-group input\">\n            <label for=\"zip_code\">Zip code</label>\n            <input type=\"number\" formControlName=\"zip_code\" id=\"zip_code\" class=\"form-control form-control-lg\" aria-describedby=\"zipcodeHelp\" placeholder=\"Enter zip code\">\n          </div>\n          <div class=\"form-group input\">\n            <label for=\"city\">City</label>\n            <input type=\"text\" formControlName=\"city\" id=\"city\" class=\"form-control form-control-lg\" aria-describedby=\"cityHelp\" placeholder=\"Enter city\">\n          </div>\n          <div class=\"form-group input\">\n            <label for=\"state\">State</label>\n            <input type=\"text\" formControlName=\"state\" id=\"state\" class=\"form-control form-control-lg\" aria-describedby=\"stateHelp\" placeholder=\"Enter state\">\n          </div>\n          <div *ngIf=\"!isOrderPlaced\" class=\"make-payment-btn\">\n            <button type=\"submit\" class=\"btn primary-button\">Make Payment</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <ng-template #loading_circular>\n    <div class=\"lds-dual-ring\"></div>\n  </ng-template>\n\n</app-main-container>\n"]}