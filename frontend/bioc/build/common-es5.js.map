{"version":3,"sources":["webpack:///src/app/core/http/cart-api.service.ts"],"names":["CartApiService","http","httpErrorHandlerService","BASE_URL","data","url","post","products","pipe","handleErr","phone","get","otp","id","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAqCaA,c;AAIX,gCAAoBC,IAApB,EAA8CC,uBAA9C,EAAgG;AAAA;;AAA5E,eAAAD,IAAA,GAAAA,IAAA;AAA0B,eAAAC,uBAAA,GAAAA,uBAAA;AAF9C,eAAAC,QAAA,GAAW,sEAAYA,QAAvB;AAEkG;;;;sCAEtFC,I,EAAe;AACzB,gBAAMC,GAAG,aAAM,KAAKF,QAAX,SAAsB,qEAAtB,CAAT;AACA,mBAAO,KAAKF,IAAL,CAAUK,IAAV,CAA4BD,GAA5B,EAAiC;AAACE,sBAAQ,EAAEH;AAAX,aAAjC,EAAmDI,IAAnD,CAAwD,kEAAW,KAAKN,uBAAL,CAA6BO,SAAxC,CAAxD,CAAP;AACD;;;iCAEMC,K,EAAa;AAClB,gBAAML,GAAG,aAAM,KAAKF,QAAX,SAAsB,4DAAtB,2BAA8CO,KAA9C,CAAT;AACA,mBAAO,KAAKT,IAAL,CAAUU,GAAV,CAAmBN,GAAnB,EAAwBG,IAAxB,CAA6B,kEAAW,KAAKN,uBAAL,CAA6BO,SAAxC,CAA7B,CAAP;AACD;;;oCAESC,K,EAAeE,G,EAAW;AAClC,gBAAMP,GAAG,aAAM,KAAKF,QAAX,SAAsB,+DAAtB,2BAAiDO,KAAjD,kBAA8DE,GAA9D,CAAT;AACA,mBAAO,KAAKX,IAAL,CAAUU,GAAV,CAAmBN,GAAnB,EAAwBG,IAAxB,CAA6B,kEAAW,KAAKN,uBAAL,CAA6BO,SAAxC,CAA7B,CAAP;AACD;;;uCAEYI,E,EAAU;AACrB,gBAAMR,GAAG,aAAM,KAAKF,QAAX,SAAsB,sEAAtB,SAA0CU,EAA1C,CAAT;AACA,mBAAO,KAAKZ,IAAL,CAAUU,GAAV,CAA2BN,GAA3B,EAAgCG,IAAhC,CAAqC,kEAAW,KAAKN,uBAAL,CAA6BO,SAAxC,CAArC,CAAP;AACD;;;gDAEqBC,K,EAAa;AACjC,gBAAML,GAAG,aAAM,KAAKF,QAAX,SAAsB,mEAAtB,2BAAqDO,KAArD,CAAT;AACA,mBAAO,KAAKT,IAAL,CAAUU,GAAV,CAA2BN,GAA3B,EAAgCG,IAAhC,CAAqC,kEAAW,KAAKN,uBAAL,CAA6BO,SAAxC,CAArC,CAAP;AACD;;;;;;;yBA7BUT,c,EAAc,uH,EAAA,2I;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBADF;;;;;wEACZA,c,EAAc;gBAD1B,wDAC0B;iBADf;AAACc,sBAAU,EAAE;AAAb,W;AACe,U","file":"common-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {HttpErrorHandlerService} from './http-error-handler.service';\nimport {Product} from '../models/product.model';\nimport {environment} from '../../../environments/environment';\nimport {CREATE_ORDER_API, GET_ORDERS_API, GET_OTP, ORDER_DETAILS_API, VERIFY_OTP} from '../../constants/api.const';\nimport {catchError} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {ProductDetail} from \"../models/product-detail.model\";\nimport { UserInfo } from '../models/user-info';\n\n\ninterface CreateOrder {\n  products: Product[];\n  _id: string;\n  total: number;\n}\n\ninterface OTP {\n  status: string;\n}\n\nexport interface OrderDetail extends UserInfo{\n  payment_id: string;\n  payment_status: boolean;\n  order_status: string;\n  transaction_id: string;\n  _id: string;\n  total: number;\n  user_info_completed: boolean;\n  createdAt: string;\n  updatedAt: string;\n  dispatched_date: string;\n  products: Product[];\n}\n\n@Injectable({providedIn: 'root'})\nexport class CartApiService {\n\n  BASE_URL = environment.BASE_URL;\n\n  constructor(private http: HttpClient, private httpErrorHandlerService: HttpErrorHandlerService) {}\n\n  createOrder(data: Product[]): Observable<CreateOrder> {\n    const url = `${this.BASE_URL}${CREATE_ORDER_API}`;\n    return this.http.post<CreateOrder>(url, {products: data}).pipe(catchError(this.httpErrorHandlerService.handleErr));\n  }\n\n  getOtp(phone: number): Observable<OTP> {\n    const url = `${this.BASE_URL}${GET_OTP}?phone_number=${phone}`;\n    return this.http.get<OTP>(url).pipe(catchError(this.httpErrorHandlerService.handleErr));\n  }\n\n  verifyOtp(phone: string, otp: string): Observable<OTP> {\n    const url = `${this.BASE_URL}${VERIFY_OTP}?phone_number=${phone}&otp=${otp}`;\n    return this.http.get<OTP>(url).pipe(catchError(this.httpErrorHandlerService.handleErr));\n  }\n\n  orderDetails(id: string): Observable<OrderDetail> {\n    const url = `${this.BASE_URL}${ORDER_DETAILS_API}${id}`;\n    return this.http.get<OrderDetail>(url).pipe(catchError(this.httpErrorHandlerService.handleErr));\n  }\n\n  getOrderByPhoneNumber(phone: string): Observable<OrderDetail> {\n    const url = `${this.BASE_URL}${GET_ORDERS_API}?phone_number=${phone}`;\n    return this.http.get<OrderDetail>(url).pipe(catchError(this.httpErrorHandlerService.handleErr));\n  }\n\n\n}\n"]}