{"version":3,"sources":["webpack:///src/app/modules/track-order/track-order.module.ts","webpack:///src/app/modules/track-order/order-detail/order-detail.component.ts","webpack:///src/app/modules/track-order/order-detail/order-detail.component.html","webpack:///src/app/constants/contact-info.const.ts","webpack:///src/app/modules/track-order/track-order.component.ts","webpack:///src/app/modules/track-order/track-order.component.html","webpack:///src/app/modules/track-order/step-indicator/step-indicator.component.ts","webpack:///src/app/modules/track-order/step-indicator/step-indicator.component.html"],"names":["routes","path","component","TrackOrderModule","forChild","declarations","imports","exports","OrderDetailComponent","route","utilityService","cartApiService","newOrder","orderId","total","subtotal","snapshot","queryParamMap","get","paramMap","showLoader","next","orderDetails","subscribe","res","orderDetail","products","map","pro","reduce","value","error1","selector","templateUrl","styleUrls","VERIFIED_NUMBER","VERIFICATION_TIME","VERIFICATION_TIMEOUT","VERIFICATION_ENCRYPTION_COUNT","TrackOrderComponent","phone","minLength","maxLength","required","otp","isPhoneVerified","isOtpSent","getOrderStatus","status","charAt","toUpperCase","slice","getVerifiedNumber","valid","saveVerifiedNumber","getDetails","verifyOtp","err","localStorage","setItem","BtoA","Date","toISOString","phoneNumber","getItem","date","limitDate","AtoB","setMinutes","getMinutes","setValue","getOrderByPhoneNumber","console","log","orders","color","undefined","removeItem","newvalue","i","atob","btoa","StepIndicatorComponent","order"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAMA,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OADqB,EAErB;AACED,YAAI,EAAE,kBADR;AAC4BC,iBAAS,EAAE;AADvC,OAFqB,CAAvB;;UAuBaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAVlB,CACP,4DADO,EAEP,kEAFO,EAGP,kEAHO,EAIP,6DAAaC,QAAb,CAAsBJ,MAAtB,CAJO,CAUkB,EAHzB,4DAGyB;;;;4HAAhBG,gB,EAAgB;AAAA,yBAdzB,0EAcyB,EAbzB,yFAayB,EAZzB,+FAYyB;AAZH,oBAGtB,4DAHsB,EAItB,kEAJsB,EAKtB,kEALsB,EAKH,4DALG,CAYG;AAPN,oBAInB,4DAJmB;AAOM,S;AAHb,O;;;;;wEAGHA,gB,EAAgB;gBAhB5B,sDAgB4B;iBAhBnB;AACRE,wBAAY,EAAE,CACZ,0EADY,EAEZ,yFAFY,EAGZ,+FAHY,CADN;AAMRC,mBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,kEAHO,EAIP,6DAAaF,QAAb,CAAsBJ,MAAtB,CAJO,CAND;AAYRO,mBAAO,EAAE,CACP,4DADO;AAZD,W;AAgBmB,U;;;;;;;;;;;;;;;;;;AChC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AACE;;AAAG;;AAAwC;;AAC7C;;;;;;AAEA;;AACE;;AAAI;;AAAmB;;AAA6B;;AAAmB;;AAAO;;AAChF;;;;;;AADsD;;AAAA;;;;;;AAGtD;;AACC;;AAAG;;AAAyB;;AAA6B;;AAA8B;;AAAO;;AAC/F;;;;;;AAD0D;;AAAA;;;;;;AAQ1D;;AAAmD;;AAAiD;;;;;;;;;;AAEpG;;AACE;;AAAM;;AAAqB;;AAAM;;AAA2C;;AAAI;;AAAsB;;AAAK;;AAAK;;AAAI;;AAAwB;;AAC9I;;;;AADsC;;AAAA;;;;;;AAGtC;;AACE;;AACF;;;;;;AADkB;;AAAA;;;;;;AATpB;;AAEE;;AAEA;;AAIA;;AAIF;;;;;;AAZoC;;AAE9B;;AAAA;;AAEC;;AAAA;;;;;;AAiBG;;AACE;;AACA;;AACE;;AAAmB;;AAAwB;;AAC3C;;AAAoB;;AAAiB;;AACvC;;AACA;;AACA;;AAAuB;;AAAoB;;AAC3C;;AAAoB;;AAAiB;;AACvC;;;;;;AARO;;AAAA;;AAEgB;;AAAA;;AACC;;AAAA;;AAGC;;AAAA;;AACH;;AAAA;;;;UDpCrBC,oB;AAQX,sCAAoBC,KAApB,EACoBC,cADpB,EAEoBC,cAFpB,EAEoD;AAAA;;AAFhC,eAAAF,KAAA,GAAAA,KAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AARpB,eAAAC,QAAA,GAAW,KAAX;AACA,eAAAC,OAAA,GAAU,EAAV;AAEA,eAAAC,KAAA,GAAQ,CAAR;AACA,eAAAC,QAAA,GAAW,CAAX;AAKE,eAAKH,QAAL,GAAgB,KAAKH,KAAL,CAAWO,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,WAAtC,MAAuD,MAAvE;AACA,eAAKL,OAAL,GAAe,KAAKJ,KAAL,CAAWO,QAAX,CAAoBG,QAApB,CAA6BD,GAA7B,CAAiC,IAAjC,CAAf;AACD;;;;qCAEO;AAAA;;AACN,iBAAKR,cAAL,CAAoBU,UAApB,CAA+BC,IAA/B,CAAoC,IAApC;AACA,iBAAKV,cAAL,CAAoBW,YAApB,CAAiC,KAAKT,OAAtC,EAA+CU,SAA/C,CAAyD,UAAAC,GAAG,EAAI;AAC9D,kBAAIA,GAAJ,EAAS;AACP,qBAAI,CAACC,WAAL,GAAmBD,GAAnB;AACA,qBAAI,CAACV,KAAL,GAAaU,GAAG,CAACE,QAAJ,CAAaC,GAAb,CAAiB,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACd,KAAR;AAAA,iBAApB,EAAmCe,MAAnC,CAA0C,UAACf,KAAD,EAAQgB,KAAR;AAAA,yBAAkBhB,KAAK,GAAGgB,KAA1B;AAAA,iBAA1C,CAAb;AACA,qBAAI,CAACf,QAAL,GAAgB,KAAI,CAACD,KAArB;AACD;;AACD,mBAAI,CAACJ,cAAL,CAAoBU,UAApB,CAA+BC,IAA/B,CAAoC,KAApC;AACD,aAPD,EAOG,UAAAU,MAAM;AAAA,qBAAI,KAAI,CAACrB,cAAL,CAAoBU,UAApB,CAA+BC,IAA/B,CAAoC,KAApC,CAAJ;AAAA,aAPT;AAQD;;;;;;;yBAzBUb,oB,EAAoB,+H,EAAA,8I,EAAA,2I;AAAA,O;;;cAApBA,oB;AAAoB,+C;AAAA,iB;AAAA,gB;AAAA,kmC;AAAA;AAAA;ACVjC;;AACE;;AACE;;AAIA;;AAIA;;AAKF;;AAEA;;AAcA;;AACE;;AAEE;;AACE;;AACE;;AAAuC;;AAAU;;AACjD;;AACE;;AAUA;;AACE;;AACA;;AAA4B;;AAAS;;AACrC;;AAA0B;;AAAY;;AACxC;;AAEA;;AACE;;AACA;;AAA4B;;AAAK;;AACjC;;AAA0B;;AAAS;;AACrC;;AACF;;AACF;;AAEF;;AAEA;;AACE;;AACE;;AAAyC;;AAAgB;;AACzD;;AAEE;;AAAK;;AAAoC;;AACzC;;AAAK;;AAAkC;;AACvC;;AAAK;;AAA2B;;AAChC;;AAAK;;AAA6B;;AAClC;;AAAK;;AAAmC;;AAC1C;;AACF;;AAEF;;AAEF;;AAEF;;AACF;;;;AAhFS;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAOF;;AAAA;;AAqB6B;;AAAA;;AAaI;;AAAA;;AAMA;;AAAA;;AAYvB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;wED/DJA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTwB,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AETjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMC,eAAe,GAAG,IAAxB;AACA,UAAMC,iBAAiB,GAAG,IAA1B;AACA,UAAMC,oBAAoB,GAAG,GAA7B,C,CAAkC;;AAClC,UAAMC,6BAA6B,GAAG,CAAtC;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AACE;;AACE;;AAAoC;;AAAG;;AAAa;;AAAI;;AAAS;;AAAG;;AAAM;;AAAK;;AAEjF;;AAEF;;;;;;AAOE;;AAA4E;;AAE5E;;;;;;AACA;;AACE;;AAAiB;;AAAG;;AACpB;;AACF;;;;;;AADmE;;AAAA;;;;;;AAXrE;;AACE;;AACE;;AAAmB;;AAAY;;AAC/B;;AAEF;;AACA;;AAGA;;AAIF;;;;;;AAVuE;;AAAA;;AAGhE;;AAAA;;AAGA;;AAAA;;;;;;;;AAKP;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAO;;;;;;;;AAChF;;AAAyE;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAM;;;;;;;;AAErG;;AACE;;AAAI;;AAAW;;AAAS;;AAAkB;;AAAS;;AACnD;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAa;;AACxF;;;;;;AAF0B;;AAAA;;;;;;AAehB;;AACE;;AACA;;AAAM;;AAAwB;;AAChC;;;;;;;;AAF0B;;AAAA;;AAAwB;;AAC1C;;AAAA;;;;;;;;;;;;;;;;;AAblB;;AACE;;AACE;;AAA2B;;;;AAA0G;;AAAiF;;AAAyC;;AAAQ;;AACvQ;;AACA;;AAAoE;;AAAW;;AACjF;;AACA;;AACE;;AACE;;AACE;;AAAI;;AAAK;;AACT;;AACE;;AAIF;;AACF;;AACA;;AACE;;AAAK;;AAAS;;AAAQ;;AAAU;;AAChC;;AAAa;;AAAqB;;AAClC;;AAAI;;AAAM;;AACV;;AAAK;;AAAS;;AAAkB;;AAAU;;AAC1C;;AAAK;;AAAiB;;AACtB;;AAAK;;AAAc;;AACnB;;AAAK;;AAAe;;AACpB;;AAAK;;AAAkB;;AACzB;;AACF;;AAEF;;AACF;;;;;;;;AA5B+B;;AAAA;;AAAgH;;AAAA;;AAA2E;;AAAA;;AAE7L;;AAAA;;AAOD;;AAAA;;AAQP;;AAAA;;AAGR;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;UDxCJC,mB;AAQX,qCAAoB5B,cAApB,EAA4DD,cAA5D,EAA4F;AAAA;;AAAxE,eAAAC,cAAA,GAAAA,cAAA;AAAwC,eAAAD,cAAA,GAAAA,cAAA;AAN5D,eAAA8B,KAAA,GAAQ,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,SAAX,CAAqB,EAArB,CAAD,EAA2B,0DAAWC,SAAX,CAAqB,EAArB,CAA3B,EAAqD,0DAAWC,QAAhE,CAApB,CAAR;AACA,eAAAC,GAAA,GAAM,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWH,SAAX,CAAqB,CAArB,CAAD,EAA0B,0DAAWC,SAAX,CAAqB,EAArB,CAA1B,EAAoD,0DAAWC,QAA/D,CAApB,CAAN;AACA,eAAAE,eAAA,GAAkB,KAAlB;AACA,eAAAC,SAAA,GAAY,KAAZ;;AAkFA,eAAAC,cAAA,GAAiB,UAAAC,MAAM;AAAA,mBAAKA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAtC;AAAA,WAAvB;AA/E+F;;;;qCAEvF;AACN,iBAAKC,iBAAL;AACD;;;mCAEQ;AAEP,gBAAI,CAAC,KAAKZ,KAAL,CAAWV,KAAZ,IAAqB,CAAC,KAAKU,KAAL,CAAWa,KAArC,EAA4C;AAC1C;AACD,aAJM,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,iBAAKP,SAAL,GAAiB,IAAjB;AACA,iBAAKD,eAAL,GAAuB,IAAvB;AACA,iBAAKS,kBAAL;AACA,iBAAKC,UAAL,CAAgB,KAAKf,KAAL,CAAWV,KAA3B;AACD;;;sCAEW;AAAA;;AACV,gBAAI,CAAC,KAAKU,KAAL,CAAWV,KAAZ,IAAqB,CAAC,KAAKc,GAAL,CAASd,KAAnC,EAA0C;AACxC;AACD;;AACD,iBAAKpB,cAAL,CAAoBU,UAApB,CAA+BC,IAA/B,CAAoC,IAApC;AACA,iBAAKV,cAAL,CAAoB6C,SAApB,CAA8B,KAAKhB,KAAL,CAAWV,KAAzC,EAAgD,KAAKc,GAAL,CAASd,KAAzD,EAAgEP,SAAhE,CAA0E,UAAAC,GAAG,EAAI;AAC/E,kBAAIA,GAAG,CAACwB,MAAJ,KAAe,UAAnB,EAA+B;AAC7B,sBAAI,CAACH,eAAL,GAAuB,IAAvB;;AACA,sBAAI,CAACS,kBAAL;;AACA,sBAAI,CAACC,UAAL,CAAgB,MAAI,CAACf,KAAL,CAAWV,KAA3B;AACD;;AACD,oBAAI,CAACpB,cAAL,CAAoBU,UAApB,CAA+BC,IAA/B,CAAoC,KAApC;AACD,aAPD,EAOG,UAAAoC,GAAG;AAAA,qBAAI,MAAI,CAAC/C,cAAL,CAAoBU,UAApB,CAA+BC,IAA/B,CAAoC,KAApC,CAAJ;AAAA,aAPN;AAQD;;;+CAEoB;AACnBqC,wBAAY,CAACC,OAAb,CAAqB,6EAArB,EAAsC,KAAKC,IAAL,CAAU,KAAKpB,KAAL,CAAWV,KAArB,CAAtC;AACA4B,wBAAY,CAACC,OAAb,CAAqB,+EAArB,EAAwC,KAAKC,IAAL,CAAU,IAAIC,IAAJ,GAAWC,WAAX,EAAV,CAAxC;AACD;;;8CAEmB;AAElB,gBAAMC,WAAW,GAAGL,YAAY,CAACM,OAAb,CAAqB,6EAArB,CAApB;AACA,gBAAMC,IAAI,GAAGP,YAAY,CAACM,OAAb,CAAqB,+EAArB,CAAb;AAEA,gBAAME,SAAS,GAAG,IAAIL,IAAJ,CAAS,KAAKM,IAAL,CAAUF,IAAV,CAAT,CAAlB;;AAEA,gBAAI,CAACC,SAAL,EAAgB;AACd;AACD;;AAEDA,qBAAS,CAACE,UAAV,CAAsBF,SAAS,CAACG,UAAV,KAAyB,kFAA/C;;AAEA,gBAAI,CAAC,CAACN,WAAF,IAAiBG,SAAS,GAAG,IAAIL,IAAJ,EAAjC,EAA6C;AAC3C,mBAAKrB,KAAL,CAAW8B,QAAX,CAAoB,KAAKH,IAAL,CAAUJ,WAAV,CAApB;AACA,mBAAKjB,SAAL,GAAiB,KAAKD,eAAL,GAAuB,IAAxC;AACA,mBAAKU,UAAL,CAAgB,KAAKf,KAAL,CAAWV,KAA3B;AACD;AACF;;;qCAEUU,K,EAAe;AAAA;;AACxB,gBAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAED,iBAAK9B,cAAL,CAAoBU,UAApB,CAA+BC,IAA/B,CAAoC,IAApC;AACA,iBAAKV,cAAL,CAAoB4D,qBAApB,CAA0C/B,KAA1C,EAAiDjB,SAAjD,CAA2D,UAAAC,GAAG,EAAI;AAChEgD,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBjD,GAAvB;;AACA,kBAAIA,GAAJ,EAAS;AACP,sBAAI,CAACkD,MAAL,GAAclD,GAAd;AACD;;AACD,oBAAI,CAACd,cAAL,CAAoBU,UAApB,CAA+BC,IAA/B,CAAoC,KAApC;AACD,aAND,EAMG,UAAAoC,GAAG;AAAA,qBAAI,MAAI,CAAC/C,cAAL,CAAoBU,UAApB,CAA+BC,IAA/B,CAAoC,KAApC,CAAJ;AAAA,aANN;AAOD;;;mCAIQ2B,M,EAAc;AACrB,gBAAI2B,KAAK,GAAG,QAAZ;;AACA,oBAAO3B,MAAP;AACE,mBAAK,QAAL;AAAkB2B,qBAAK,GAAG,SAAR;AAAoB;;AACtC,mBAAK,YAAL;AAAsBA,qBAAK,GAAG,SAAR;AAAoB;;AAC1C,mBAAK,WAAL;AAAqBA,qBAAK,GAAG,SAAR;AAAoB;;AACzC,mBAAK,UAAL;AAAoBA,qBAAK,GAAG,SAAR;AAAoB;AAJ1C;;AAMA,mBAAOA,KAAP;AACD;;;yCAEW;AAEV,iBAAKnC,KAAL,GAAa,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,SAAX,CAAqB,EAArB,CAAD,EAA2B,0DAAWC,SAAX,CAAqB,EAArB,CAA3B,EAAqD,0DAAWC,QAAhE,CAApB,CAAb;AACA,iBAAKC,GAAL,GAAW,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWH,SAAX,CAAqB,CAArB,CAAD,EAA0B,0DAAWC,SAAX,CAAqB,EAArB,CAA1B,EAAoD,0DAAWC,QAA/D,CAApB,CAAX;AACA,iBAAK+B,MAAL,GAAcE,SAAd;AACA,iBAAK9B,SAAL,GAAiB,KAAjB;AACA,iBAAKD,eAAL,GAAuB,KAAvB;AACAa,wBAAY,CAACmB,UAAb,CAAwB,6EAAxB;AACAnB,wBAAY,CAACmB,UAAb,CAAwB,+EAAxB;AACD;;;+BAEI/C,K,EAAe;AAClB,gBAAIgD,QAAQ,GAAGhD,KAAf;;AAEA,iBAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,2FAApB,EAAmDA,CAAC,EAApD,EAA0D;AACxDD,sBAAQ,GAAGE,IAAI,CAACF,QAAD,CAAf;AACD;;AAED,mBAAOA,QAAP;AACD;;;+BAEIhD,K,EAAe;AAClB,gBAAIgD,QAAQ,GAAGhD,KAAf;;AAEA,iBAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,2FAApB,EAAmDA,CAAC,EAApD,EAA0D;AACxDD,sBAAQ,GAAGG,IAAI,CAACH,QAAD,CAAf;AACD;;AAED,mBAAOA,QAAP;AACD;;;;;;;yBAjIUvC,mB,EAAmB,2I,EAAA,8I;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,gB;AAAA,e;AAAA,svC;AAAA;AAAA;AChBhC;;AACE;;AACE;;AAOA;;AAcA;;AACA;;AAEA;;AAKA;;AA+BF;;AACF;;;;AA7DiD;;AAAA;;AAOpB;;AAAA;;AAcjB;;AAAA;;AACA;;AAAA;;AAEH;;AAAA;;AAKa;;AAAA;;;;;;;;;;wEDfTA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTP,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;AEhBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUuB;;AAA8C;;;;AAA6C;;;;;;AAA7C;;AAAA;;;;;;AAI5C;;AAAgD;;AAAY;;;;;;;;;;UDNxEgD,sB;AAIX,0CAAc;AAAA;AAAG;;;;qCAGT,CACP;;;;;;;yBARUA,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,uC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,yP;AAAA;AAAA;ACRnC;;AACE;;AACI;;AACC;;AACC;;AACC;;AACA;;AAAG;;AAAO;;AAAI;;AAAM;;;;AAAsC;;AAAO;;AAClE;;AACA;;AACC;;AACA;;AAAG;;AAAO;;AAAI;;AAAkG;;AACjH;;AACA;;AACC;;AACA;;AAAG;;AAAS;;AAAI;;AAAmE;;AACpF;;AACD;;AACD;;AACL;;AACD;;;;AAb6B;;AAAA;;AAEO;;AAAA;;AAEP;;AAAA;;AAEO;;AAAA;;AAEL;;AAAA;;;;;;;;;;wEDNlBA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTlD,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;AAExBiD,eAAK,EAAE,CAAF;kBAAb;AAAa,WAAE","file":"src-app-modules-track-order-track-order-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TrackOrderComponent } from './track-order.component';\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SharedModule} from '../../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StepIndicatorComponent } from './step-indicator/step-indicator.component';\n\nconst routes: Routes = [\n  { path: '', component: TrackOrderComponent },\n  {\n    path: 'order-detail/:id', component: OrderDetailComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    TrackOrderComponent,\n    OrderDetailComponent,\n    StepIndicatorComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class TrackOrderModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CartApiService, OrderDetail} from '../../../core/http/cart-api.service';\nimport {UtilityService} from '../../../core/services/utility.service';\n\n@Component({\n  selector: 'app-order-confirmation',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.scss']\n})\nexport class OrderDetailComponent implements OnInit {\n\n  newOrder = false;\n  orderId = '';\n  orderDetail: OrderDetail;\n  total = 0;\n  subtotal = 0;\n\n  constructor(private route: ActivatedRoute,\n              private utilityService: UtilityService,\n              private cartApiService: CartApiService) {\n    this.newOrder = this.route.snapshot.queryParamMap.get('new_order') === 'true';\n    this.orderId = this.route.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit(): void {\n    this.utilityService.showLoader.next(true);\n    this.cartApiService.orderDetails(this.orderId).subscribe(res => {\n      if (res) {\n        this.orderDetail = res;\n        this.total = res.products.map(pro => pro.total).reduce((total, value) => total + value);\n        this.subtotal = this.total;\n      }\n      this.utilityService.showLoader.next(false);\n    }, error1 => this.utilityService.showLoader.next(false));\n  }\n\n}\n","<app-main-container title=\"ORDER DETAILS\">\n  <div class=\"order-detail-container\">\n    <div *ngIf=\"newOrder\" class=\"alert alert-success\">\n      <p>Your order has been successfully placed!</p>\n    </div>\n\n    <div *ngIf=\"orderDetail\" class=\"alert alert-info\">\n      <p> Your order id is - <span class=\"alert-info__id\">{{orderDetail._id}}</span></p>\n    </div>\n\n    <div *ngIf=\"orderDetail?.payment_status\" class=\"alert alert-info\">\n     <p>Your transaction id is - <span class=\"alert-info__id\">{{orderDetail.transaction_id}}</span></p>\n    </div>\n\n\n  </div>\n\n  <div *ngIf=\"orderDetail!=undefined\" [ngSwitch]=\"orderDetail.order_status\" class=\"tracker\">\n\n    <h2 *ngSwitchCase=\"'cancelled'\" class=\"not_placed\">Order Cancelled, you money will be refunded soon.</h2>\n\n    <div *ngSwitchCase=\"'created'\" class=\"not_placed\">\n      <h2 > Order not placed yet,</h2> <a [routerLink]=\"['/view-cart/checkout']\"> <h2>&nbsp;click here&nbsp;</h2></a> <h2>to place this order now.</h2>\n    </div>\n\n    <div *ngSwitchDefault>\n      <step-indicator [order]=\"orderDetail\"></step-indicator>\n    </div>\n\n  </div>\n\n  <div class=\"order-detail-secondary-container\">\n    <div class=\"row\">\n\n      <div class=\"col-md-6 col-sm-12 order-information__parent\">\n        <div class=\"order-information\">\n          <div class=\"order-information__header\">Your Order</div>\n          <div class=\"order-information__content\">\n            <div class=\"order-item\" *ngFor=\"let product of orderDetail?.products\">\n              <img src=\"{{product.image}}\" style=\"object-fit: contain\" height=\"80\" width=\"80\">\n              <div class=\"name-and-price\">\n                <span class=\"name\">{{product.product_name}}</span>\n                <span class=\"price\">{{product.price}}</span>\n              </div>\n              <div class=\"flex-fill\"></div>\n              <span class=\"quantity\">{{product.quantity}}</span>\n              <span class=\"total\">{{product.total}}</span>\n            </div>\n            <div class=\"sub-total-item\">\n              <div class=\"flex-fill\"></div>\n              <span class=\"total-heading\">Sub total</span>\n              <span class=\"total-count\">{{subtotal}}</span>\n            </div>\n\n            <div class=\"total-item\">\n              <div class=\"flex-fill\"></div>\n              <span class=\"total-heading\">Total</span>\n              <span class=\"total-count\">{{total}}</span>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"col-md-6 address-information__parent\">\n        <div class=\"address-information\">\n          <div class=\"address-information__header\">Delivery Address</div>\n          <div class=\"address-information__container\">\n\n            <div>Ship to:  {{orderDetail?.user_name}}</div>\n            <div>Address:  {{orderDetail?.address}}</div>\n            <div>City: {{orderDetail?.city}}</div>\n            <div>State: {{orderDetail?.state}}</div>\n            <div>Zip Code: {{orderDetail?.zip_code}}</div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>\n</app-main-container>\n","\nexport const VERIFIED_NUMBER = '_n';\nexport const VERIFICATION_TIME = '_t';\nexport const VERIFICATION_TIMEOUT = 300; // value in minutes\nexport const VERIFICATION_ENCRYPTION_COUNT = 3;\n","import { Component, OnInit } from '@angular/core';\nimport {CartApiService, OrderDetail} from '../../core/http/cart-api.service';\nimport {UtilityService} from '../../core/services/utility.service';\nimport {FormControl, Validators} from '@angular/forms';\nimport {\n  VERIFICATION_ENCRYPTION_COUNT,\n  VERIFICATION_TIME,\n  VERIFICATION_TIMEOUT,\n  VERIFIED_NUMBER\n} from '../../constants/contact-info.const';\n\n@Component({\n  selector: 'app-track-order',\n  templateUrl: './track-order.component.html',\n  styleUrls: ['./track-order.component.scss']\n})\nexport class TrackOrderComponent implements OnInit {\n\n  phone = new FormControl('', [Validators.minLength(10), Validators.maxLength(10), Validators.required]);\n  otp = new FormControl('', [Validators.minLength(6), Validators.maxLength(10), Validators.required]);\n  isPhoneVerified = false;\n  isOtpSent = false;\n  orders: OrderDetail;\n\n  constructor(private cartApiService: CartApiService, private utilityService: UtilityService) { }\n\n  ngOnInit(): void {\n    this.getVerifiedNumber();\n  }\n\n  getOtp() {\n\n    if (!this.phone.value || !this.phone.valid) {\n      return;\n    }\n    // this.utilityService.showLoader.next(true);\n    // this.cartApiService.getOtp(this.phone.value).subscribe(res => {\n    //   if (res.status === 'pending') {\n    //     this.isOtpSent = true;\n    //   }\n    //   this.utilityService.showLoader.next(false);\n    // }, err => this.utilityService.showLoader.next(false));\n    this.isOtpSent = true;\n    this.isPhoneVerified = true;\n    this.saveVerifiedNumber();\n    this.getDetails(this.phone.value);\n  }\n\n  verifyOtp() {\n    if (!this.phone.value || !this.otp.value) {\n      return;\n    }\n    this.utilityService.showLoader.next(true);\n    this.cartApiService.verifyOtp(this.phone.value, this.otp.value).subscribe(res => {\n      if (res.status === 'verified') {\n        this.isPhoneVerified = true;\n        this.saveVerifiedNumber();\n        this.getDetails(this.phone.value);\n      }\n      this.utilityService.showLoader.next(false);\n    }, err => this.utilityService.showLoader.next(false));\n  }\n\n  saveVerifiedNumber() {\n    localStorage.setItem(VERIFIED_NUMBER, this.BtoA(this.phone.value));\n    localStorage.setItem(VERIFICATION_TIME, this.BtoA(new Date().toISOString()));\n  }\n\n  getVerifiedNumber() {\n\n    const phoneNumber = localStorage.getItem(VERIFIED_NUMBER);\n    const date = localStorage.getItem(VERIFICATION_TIME);\n\n    const limitDate = new Date(this.AtoB(date));\n\n    if (!limitDate) {\n      return;\n    }\n\n    limitDate.setMinutes( limitDate.getMinutes() + VERIFICATION_TIMEOUT);\n\n    if (!!phoneNumber && limitDate > new Date()) {\n      this.phone.setValue(this.AtoB(phoneNumber));\n      this.isOtpSent = this.isPhoneVerified = true;\n      this.getDetails(this.phone.value);\n    }\n  }\n\n  getDetails(phone: string) {\n    if (!phone) {\n      return;\n    }\n\n    this.utilityService.showLoader.next(true);\n    this.cartApiService.getOrderByPhoneNumber(phone).subscribe(res => {\n      console.log('list is', res);\n      if (res) {\n        this.orders = res;\n      }\n      this.utilityService.showLoader.next(false);\n    }, err => this.utilityService.showLoader.next(false));\n  }\n\n  getOrderStatus = status =>  status.charAt(0).toUpperCase() + status.slice(1);\n\n  getColor(status: string){\n    let color = '#black'\n    switch(status){\n      case 'placed' :   color = '#fc7303';  break;\n      case 'dispatched' :   color = '#41fc03';  break;\n      case 'delivered' :   color = '#41fc03';  break;\n      case 'canceled' :   color = '#fc0303';  break;\n    }\n    return color;\n  }\n\n  clearStorage(){\n\n    this.phone = new FormControl('', [Validators.minLength(10), Validators.maxLength(10), Validators.required]);\n    this.otp = new FormControl('', [Validators.minLength(6), Validators.maxLength(10), Validators.required]);\n    this.orders = undefined;\n    this.isOtpSent = false;\n    this.isPhoneVerified = false;\n    localStorage.removeItem(VERIFIED_NUMBER);\n    localStorage.removeItem(VERIFICATION_TIME);\n  }\n\n  AtoB(value: string) {\n    let newvalue = value;\n\n    for (let i = 0; i < VERIFICATION_ENCRYPTION_COUNT; i ++ ) {\n      newvalue = atob(newvalue);\n    }\n\n    return newvalue;\n  }\n\n  BtoA(value: string) {\n    let newvalue = value;\n\n    for (let i = 0; i < VERIFICATION_ENCRYPTION_COUNT; i ++ ) {\n      newvalue = btoa(newvalue);\n    }\n\n    return newvalue;\n  }\n\n}\n","<app-main-container title=\"TRACK ORDER\">\n  <div class=\"track-order-container\">\n    <div class=\"alert alert-dark can-track-text\" *ngIf=\"!orders\">\n      <p>\n        You can track your orders with your <b>mobile number</b>. Please <b>verify</b> your mobile\n        number to check your orders.\n      </p>\n\n    </div>\n    <div class=\"phone-input\" *ngIf=\"!orders\">\n      <div class=\"form-group\">\n        <label for=\"phone\">Phone number</label>\n        <input type=\"text\" id=\"phone\" class=\"form-control form-control-lg\" [formControl]=\"phone\"\n               placeholder=\"Enter phone number\">\n      </div>\n      <div *ngIf=\"isOtpSent && !isPhoneVerified\" class=\"alert alert-success mt-3\">OTP has been sent to this mobile\n        number, please verify!\n      </div>\n      <div *ngIf=\"isOtpSent && !isPhoneVerified\" class=\"form-group\">\n        <label for=\"otp\">OTP</label>\n        <input type=\"text\" id=\"otp\" class=\"form-control form-control-lg\" [formControl]=\"otp\" placeholder=\"Enter OTP\">\n      </div>\n    </div>\n    <button *ngIf=\"!isOtpSent\" class=\"btn primary-button\" (click)=\"getOtp()\">Get OTP</button>\n    <button *ngIf=\"!isPhoneVerified && isOtpSent\" class=\"btn primary-button\" (click)=\"verifyOtp()\">Verify</button>\n\n    <div *ngIf=\"orders\" class=\"change_number\">\n      <h1>Orders for <strong> {{ phone.value }} </strong></h1>\n      <button class=\"btn btn-dark change_number__btn\" (click)=\"clearStorage()\">Change Number</button>\n    </div>\n\n    <div class=\"card\" *ngFor=\"let order of orders\">\n      <div class=\"card-header\">\n        <span class=\"date-heading\">{{order.createdAt | date:'fullDate'}} &nbsp; | Amount : &#8377; {{order.total}}  &nbsp; | Status:  &nbsp; <span [ngStyle]=\"{'color': getColor(order.order_status), 'font-weight': '800' }\">{{ getOrderStatus(order.order_status)  }}</span> </span>\n        <span class=\"flex-fill\"></span>\n        <a class=\"detail-button\" [routerLink]=\"['order-detail', order._id]\">View detail</a>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"product-list col-md-8 col-sm-12 \">\n            <h3>Items</h3>\n            <div class=\"order-items\">\n              <div class=\"item\" *ngFor=\"let product of order.products\">\n                <img class=\"item-image\" src=\"{{product.image}}\" alt=\"{{order.product_name}}\"/>\n                <span>{{product.product_name}}</span>\n              </div>\n            </div>\n          </div>\n          <div class=\"delivery-address col-md-4\">\n            <h2> <strong> SHIP TO:</strong> </h2>\n            <h3 class=\"\">{{ order.user_name }}</h3>\n            <h1>&nbsp;</h1>\n            <h2> <strong> DELIVERY ADDRESS: </strong> </h2>\n            <div>{{order.address}}</div>\n            <div>{{order.city}}</div>\n            <div>{{order.state}}</div>\n            <div>{{order.zip_code}}</div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</app-main-container>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { OrderDetail } from 'src/app/core/http/cart-api.service';\n\n@Component({\n  selector: 'step-indicator',\n  templateUrl: './step-indicator.component.html',\n  styleUrls: ['./step-indicator.component.scss']\n})\nexport class StepIndicatorComponent implements OnInit {\n\n  @Input() order: OrderDetail;\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-12 col-md-10 hh-grayBox pt45 pb20\">\n\t\t\t\t\t\t\t<div class=\"row justify-content-between\">\n\t\t\t\t\t\t\t\t<div class=\"order-tracking completed\">\n\t\t\t\t\t\t\t\t\t<span class=\"is-complete\"></span>\n\t\t\t\t\t\t\t\t\t<p>Ordered<br><span>{{ order.createdAt| date:'fullDate' }}</span></p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"order-tracking\" [ngClass]=\"{'completed': order.order_status !=='placed'}\">\n\t\t\t\t\t\t\t\t\t<span class=\"is-complete\"></span>\n\t\t\t\t\t\t\t\t\t<p>Shipped<br><span *ngIf=\"order.order_status !=='placed'\"> {{ order.dispatched_date | date:'fullDate' }}</span></p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"order-tracking\" [ngClass]=\"{'completed': order.order_status ==='delivered'}\">\n\t\t\t\t\t\t\t\t\t<span class=\"is-complete\"></span>\n\t\t\t\t\t\t\t\t\t<p>Delivered<br><span *ngIf=\"order.order_status ==='delivered'\">Fri, June 28</span></p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t</div>\n</div>\n"]}